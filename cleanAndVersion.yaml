# Author: Nuno Aguiar
help:
  text   : GitHub step to delete extra build files and capture the version.
  expects:
  - name     : path
    desc     : The build output
    mandatory: true

todo:
- Clean up and get version

ojob:
  opacks      :
  - openaf: 20230704
  catch       : printErrnl("[" + job.name + "] "); if (isDef(exception.javaException)) exception.javaException.printStackTrace(); else printErr(exception)
  logToConsole: true   # to change when finished


jobs:
# -------------------------------
- name : Clean up and get version
  check:
    in:
      path: isString
  exec : |
    var remove = [], version = ""

    io.listFiles(args.path).files.forEach(f => {
      try {
        if (f.filename.indexOf("jemalloc") > 0) {
          var _v = $sh("strings " + f.filepath + " | grep 'JEMALLOC_VERSION \"'").get(0).stdout
          version = _v.match(/((\d\.?)+)/)[0]
        } else {
          var _version = f.filename.match(/((\d\.?)+)/)[0]
          if (_version.length > version.length) version = _version
        }
      } catch(e) {
      }
    })

    remove.forEach(f => {
      tlog("Deleting {{filename}}...", f)
    })

    log("Adding version=" + version + " in '" + getEnv("GITHUB_ENV") + "'...")
    io.writeFileString("version=" + version + "\n", getEnv("GITHUB_ENV"), __, true)
    //print("::set-output name=version::version=" + version)