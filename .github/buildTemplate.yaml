# For use with ojob buildTemplate.yaml
template: &TEMPLATE |
  name: Builds

  on  :
    ## Comment the entries below you won't be needing
    #  (and double-check if you repo uses 'main' or 'master')
    #push        :
      #branches:
      #- main
      #paths:
      #- 'xyz/**'
      #paths-ignore:
      #- '.github/**'
    #pull_request:
      #branches:
      #- main
      #paths:
      #- 'xyz/**'
      #paths-ignore:
      #- '.github/**'
    #schedule    :
    #- cron: '30 6 * * *'

    ## Uncomment and adapt the following lines to trigger the action upon complete of another
    ##
    #workflow_run:
    #  workflows:
    #    - 'main.yml'
    #  types:
    #    - completed

    workflow_dispatch:
    ## Uncomment the following lines if you need to provide specific inputs
    ##
    #  inputs:
    #    inputOne:
    #      description: 'Sample input to use'
    #      required   : true
    #      default    : 'some value'

  jobs:
    {{#each targets}}
    # ============
    {{name}}{{arch}}:
      {{#$is arch 'arm64'}}
      runs-on: ubuntu-24.04-arm
      {{else}}
      runs-on: ubuntu-latest
      {{/$is}}
      permissions:
        contents     : write
        pull-requests: write

      steps  :
      - name: Cache OpenAF runtime
        uses: actions/cache@v4
        with:
          key : oaf-t8
          path: /tmp/oaf

      # --------------
      - name: Checkout
        uses: actions/checkout@v4

      {{#$is arch 'arm64'}}
      # -----------------
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v2
      {{/$is}}

      # -----------
      - name: Build
        uses: openaf/ojob-action@v7
        env :
          GITHUB_TOKEN: $\{{ secrets.GITHUB_TOKEN }}
        with:
          ojob: build.yaml
          args: 'op={{name}} arch={{arch}}'
          dist: t8

      # -----------------------
      - name: Clean and version
        uses: openaf/ojob-action@v7
        env :
          GITHUB_TOKEN: $\{{ secrets.GITHUB_TOKEN }}
        with:
          ojob: cleanAndVersion.yaml
          args: 'path={{name}}'
          dist: t8

      # -------------------
      - name: Upload output
        uses: actions/upload-artifact@v4
        with:
          name: {{prefix}}-$\{{ env.version }}-{{suffix}}
          path: {{name}}

    {{/each}}

    release:
    # ====================
      needs:
      {{#each targets}}
      - {{name}}{{arch}}
      {{/each}}
      runs-on: ubuntu-latest 
      permissions:
        contents     : write
        pull-requests: write

      steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create tgz and release them
        uses: openaf/ojob-action@v7
        env :
          GITHUB_TOKEN: $\{{ secrets.GITHUB_TOKEN }}
        with:
          dist  : t8
          script: |
            $sh("find . -maxdepth 1 -type d -exec tar czvf {}.tar.gz {} \\;")
            .prefix("create")
            .get()

            $sh("gh release create 0.1.2  -d -t \"Release 0.1.2\" " + io.listFilenames(".").filter(f => f.indexOf("lib")>0 && f.lastIndexOf(".tar.gz")>0).join(" "))
            .prefix("gh")
            .get()

ojob:
  logToConsole: false

todo:
- (print       ): ðŸ‘· Generating 'build.yaml'...
- (template    ): *TEMPLATE
  ((outputFile)): workflows/build.yaml
  ((data      )):
    targets  :
    - name  : buildUBI9JE
      prefix: libjemalloc
      suffix: redhat9-x64
      arch  : amd64
    - name  : buildUBI9JE
      prefix: libjemalloc
      suffix: redhat9-aarch64
      arch  : arm64

    - name  : buildUBI9TC
      prefix: libtcmalloc
      suffix: redhat9-x64
      arch  : amd64
    - name  : buildUBI9TC
      prefix: libtcmalloc
      suffix: redhat9-aarch64
      arch  : arm64

    - name  : buildUBI9MI
      prefix: libmimalloc
      suffix: redhat9-x64
      arch  : amd64
    - name  : buildUBI9MI
      prefix: libmimalloc
      suffix: redhat9-aarch64
      arch  : arm64

    - name  : buildUbuntuJE
      prefix: libjemalloc
      suffix: debian-x64
      arch  : amd64
    - name  : buildUbuntuJE
      prefix: libjemalloc
      suffix: debian-aarch64
      arch  : arm64

    - name  : buildUbuntuBionicJE
      prefix: libjemalloc
      suffix: debian-bionic-x64
      arch  : amd64
    - name  : buildUbuntuBionicJE
      prefix: libjemalloc
      suffix: debian-bionic-aarch64
      arch  : arm64

    - name  : buildUbuntuTC
      prefix: libtcmalloc
      suffix: debian-x64
      arch  : amd64
    - name  : buildUbuntuFocalTC
      prefix: libtcmalloc
      suffix: debian-focal-aarch64
      arch  : arm64
 
    - name  : buildUbuntuBionicTC
      prefix: libtcmalloc
      suffix: debian-bionic-x64
      arch  : amd64
    - name  : buildUbuntuBionicTC
      prefix: libtcmalloc
      suffix: debian-bionic-aarch64
      arch  : arm64

    - name  : buildUbuntuMI
      prefix: libmimalloc
      suffix: debian-x64
      arch  : amd64
    - name  : buildUbuntuMI
      prefix: libmimalloc
      suffix: debian-aarch64
      arch  : arm64

    - name  : buildUbuntuBionicMI
      prefix: libmimalloc
      suffix: debian-bionic-x64
      arch  : amd64
    - name  : buildUbuntuBionicMI
      prefix: libmimalloc
      suffix: debian-bionic-aarch64
      arch  : arm64

    - name  : buildUBI8JE
      prefix: libjemalloc
      suffix: redhat8-x64
      arch  : amd64
    - name  : buildUBI8JE
      prefix: libjemalloc
      suffix: redhat8-aarch64
      arch  : arm64

    - name  : buildUBI7JE
      prefix: libjemalloc
      suffix: redhat7-x64
      arch  : amd64
    - name  : buildUBI7JE
      prefix: libjemalloc
      suffix: redhat7-aarch64
      arch  : arm64

    - name  : buildUBI8TC
      prefix: libtcmalloc
      suffix: redhat8-x64
      arch  : amd64
    - name  : buildUBI8TC
      prefix: libtcmalloc
      suffix: redhat8-aarch64
      arch  : arm64

    - name  : buildUBI8MI
      prefix: libmimalloc
      suffix: redhat8-x64
      arch  : amd64
    - name  : buildUBI8MI
      prefix: libmimalloc
      suffix: redhat8-aarch64
      arch  : arm64

    - name  : buildAlpineJE
      prefix: libjemalloc
      suffix: alpine-x64
      arch  : amd64
    - name  : buildAlpineJE
      prefix: libjemalloc
      suffix: alpine-aarch64
      arch  : arm64    

    - name  : buildAlpineTC
      prefix: libtcmalloc
      suffix: alpine-x64
      arch  : amd64
    - name  : buildAlpineTC
      prefix: libtcmalloc
      suffix: alpine-aarch64
      arch  : arm64    

    - name  : buildOracle7JE
      prefix: libjemalloc
      suffix: oracle7-x64
      arch  : amd64
    - name  : buildOracle7JE
      prefix: libjemalloc
      suffix: oracle7-aarch64
      arch  : arm64

    #- name  : buildOracle7TC
    #  prefix: libtcmalloc
    #  suffix: oracle7-x64
    #  arch  : amd64
    #- name  : buildOracle7TC
    #  prefix: libtcmalloc
    #  suffix: oracle7-aarch64
    #  arch  : arm64

    - name  : buildOracle8JE
      prefix: libjemalloc
      suffix: oracle8-x64
      arch  : amd64
    - name  : buildOracle8JE
      prefix: libjemalloc
      suffix: oracle8-aarch64
      arch  : arm64

    - name  : buildOracle8TC
      prefix: libtcmalloc
      suffix: oracle8-x64
      arch  : amd64
    - name  : buildOracle8TC
      prefix: libtcmalloc
      suffix: oracle8-aarch64
      arch  : arm64

    - name  : buildOracle8MI
      prefix: libmimalloc
      suffix: oracle8-x64
      arch  : amd64
    - name  : buildOracle8MI
      prefix: libmimalloc
      suffix: oracle8-aarch64
      arch  : arm64

    # - name  : buildOracle9JE
    #   prefix: libjemalloc
    #   suffix: oracle9-x64
    #   arch  : amd64
    # - name  : buildOracle9JE
    #   prefix: libjemalloc
    #   suffix: oracle9-aarch64
    #   arch  : arm64

    # - name  : buildOracle9TC
    #   prefix: libtcmalloc
    #   suffix: oracle9-x64
    #   arch  : amd64
    # - name  : buildOracle9TC
    #   prefix: libtcmalloc
    #   suffix: oracle9-aarch64
    #   arch  : arm64
- (print       ): âœ… File 'build.yaml' generated.
